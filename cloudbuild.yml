steps:
# Authenticate dockerhub user based on secrets vault in gcp to ensure that nginx gets pulled properly 
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', 'docker login --username=$$USERNAME --password=$$PASSWORD']
  secretEnv: ['USERNAME', 'PASSWORD']
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$_PROJECT_NAME/$_IMAGE_NAME', '-f', './build-container-images/docker-files/$_DOCKERFILE', '.']
  timeout: 500s
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$_PROJECT_NAME/$_IMAGE_NAME']  
# - name: 'gcr.io/cloud-builders/kubectl'
#   args: ['set', 'image', 'path/to/deployment_name', 'container_name=gcr.io/trio-test-241411/sample-nginx']
#   env:
#   - 'CLOUDSDK_COMPUTE_ZONE=eu-west-1b'
#   - 'CLOUDSDK_CONTAINER_CLUSTER'=triometric-customer-cluster
# - name: 'gcr.io/cloud-builders/gcloud'
#   env:
#     SERVICE_ACCOUNT: ${{ secret.GCP_SERVICE_ACCOUNT }}
#   entrypoint: 'bash'
#   args: ["./htrak/path/to/somescript.sh"]
#   waitFor: ["-"]
#   timeout: 3600s
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args: ['-c', 'echo', 'testing that cloudbuilder runs and builds $_IMAGE_NAME and deploying webapp in region']
  timeout: 10s
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['run', 'deploy', 'sample-ui', '--image', 'gcr.io/$_PROJECT_NAME/$_IMAGE_NAME', '--port', '80', '--region', '$_REG', '--platform', 'managed', '--allow-unauthenticated']

availableSecrets:
  secretManager:
   - versionName: projects/$_PROJECT_ID/secrets/DOCKERHUB_PASSWORD/versions/1
     env: 'PASSWORD'
   - versionName: projects/$_PROJECT_ID/secrets/DOCKERHUB_USERNAME/versions/1
     env: 'USERNAME'

# To invoke with GitLab Ci:
# Modify .gitlab-ci.yml and add the following:
#
# image: docker:latest

# stages:
#   - deploy

# deploy:
#   stage: deploy
#   image: google/cloud-sdk
#   services:
#     - docker:dind
#   script:
#     - echo $GCP_SERVICE_KEY > gcloud-service-key.json # Google Cloud service accounts
#     - gcloud auth activate-service-account --key-file gcloud-service-key.json
#     - gcloud config set project $GCP_PROJECT_ID
#     - gcloud builds submit . --config=cloudbuild.yaml